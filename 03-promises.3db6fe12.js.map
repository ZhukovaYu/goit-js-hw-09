{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SA4BpCF,EAAKG,iBAAiB,UAfD,SAAAC,G,kBAMjBC,YAAW,WAjBO,IAACC,EAAUC,GAAVD,EAkBHE,EAlBaD,EAkBVE,EAjBd,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,qBAAoCI,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDK,EAAO,oBAAmCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,KAa7CS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAAcW,EAAApB,GAASqB,OAAOC,QAAQ,qBAAoCL,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IAClGc,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAAcW,EAAApB,GAASqB,OAAOG,QAAQ,oBAAmCP,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IACrGE,GAASc,C,KATbnB,EAAGoB,iBAIH,IAHA,IAAMD,EAAOnB,EAAGqB,cAAcC,SAASH,KAAKI,MACxClB,EAAQL,EAAGqB,cAAcC,SAASnB,MAAMoB,MACtCC,EAASxB,EAAGqB,cAAcC,SAASE,OAAOD,MACvCE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n};\n\nconst onFormSubmit = el => {\n  el.preventDefault();\n  const step = el.currentTarget.elements.step.value;\n  let delay = el.currentTarget.elements.delay.value;\n  const amount = el.currentTarget.elements.amount.value;\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      createPromise(i, delay)\n        .then(({ position, delay }) => { Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`); })\n        .catch(({ position, delay }) => { Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`); });\n      delay += step;\n    }\n  )};\n};\n\nform.addEventListener('submit', onFormSubmit);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","el","setTimeout","position","delay","i","delay1","Promise","resolve","reject","Math","random","concat","then","param","$parcel$interopDefault","Notify","success","catch","failure","step","preventDefault","currentTarget","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.3db6fe12.js.map"}